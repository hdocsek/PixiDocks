<ResourceDictionary xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:PixiDocks.Avalonia.Controls"
        xmlns:core="clr-namespace:PixiDocks.Core;assembly=PixiDocks.Core"
        xmlns:behaviors="clr-namespace:PixiDocks.Avalonia.Behaviors"
        xmlns:avalonia="clr-namespace:PixiDocks.Avalonia">
    <Design.PreviewWith>
        <controls:DockableArea />
    </Design.PreviewWith>

    <ControlTheme TargetType="controls:DockableArea" x:Key="{x:Type controls:DockableArea}">
        <!-- Set Defaults -->
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                    <Border.Styles>
                        <Style Selector=":is(TabControl).draggable">
                            <Setter Property="ItemsPanel">
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </Setter>
                        </Style>

                        <Style Selector=":is(TabControl).draggable > :is(TabItem)">
                            <Setter Property="ZIndex" Value="0" />
                            <Setter Property="(Interaction.Behaviors)">
                                <BehaviorCollectionTemplate>
                                    <BehaviorCollection>
                                        <behaviors:DockableTabDragBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
                                    </BehaviorCollection>
                                </BehaviorCollectionTemplate>
                            </Setter>
                        </Style>

                        <Style Selector=":is(TabControl).draggable > :is(TabItem):pressed">
                            <Setter Property="ZIndex" Value="1" />
                        </Style>
                    </Border.Styles>
                    <Grid>
                        <controls:DockingPicker ZIndex="9999" IsVisible="False" Name="PART_DockingPicker" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                Dockables="{Binding Dockables, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid ColumnDefinitions="*, *" RowDefinitions="*, *" ZIndex="9999">
                            <Border Classes="dockPreview" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Name="TopPreview"/>
                            <Border Classes="dockPreview" Grid.Row="0" Grid.Column="0" Name="LeftPreview" Grid.RowSpan="2"/>
                            <Border Classes="dockPreview" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Name="RightPreview"/>
                            <Border Classes="dockPreview" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Name="BottomPreview"/>
                            <Border Classes="dockPreview" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" Name="CenterPreview"/>
                        </Grid>
                        <Grid>
                            <TabControl Name="PART_TabControl" Theme="{DynamicResource PixiDockTabControlTheme}" Classes="draggable"
                                        SelectedItem="{Binding Path=ActiveDockable, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        ItemsSource="{TemplateBinding Dockables}"
                                        TabStripPlacement="{TemplateBinding TabPlacement}">
                                <TabControl.ItemTemplate>
                                    <DataTemplate>
                                        <controls:DockableAreaStripItem DockPanel.Dock="Top"
                                                                        Dockable="{Binding $parent[TabItem].Content}"/>
                                    </DataTemplate>
                                </TabControl.ItemTemplate>
                                <TabControl.Resources>
                                    <ResourceDictionary>
                                        <ResourceDictionary.MergedDictionaries>
                                            <MergeResourceInclude Source="/Themes/PixiDockTabItem.axaml"/>
                                        </ResourceDictionary.MergedDictionaries>
                                    </ResourceDictionary>
                                </TabControl.Resources>
                            </TabControl>
                            <ContentPresenter Content="{Binding FallbackContent, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsVisible="{Binding !Dockables.Count, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ Border.dockPreview">
            <Setter Property="Background" Value="{DynamicResource ThemeDockPreviewBackgroundBrush}"/>
            <Setter Property="Opacity" Value="0.5"/>
            <Setter Property="IsVisible" Value="False"/>
        </Style>

        <Style Selector="^:dockableOver /template/ controls|DockingPicker">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
        <Style Selector="^:top /template/ Border#TopPreview">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
        <Style Selector="^:bottom /template/ Border#BottomPreview">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
        <Style Selector="^:right /template/ Border#RightPreview">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
        <Style Selector="^:left /template/ Border#LeftPreview">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
        <Style Selector="^:center /template/ Border#CenterPreview">
            <Setter Property="IsVisible" Value="True"/>
        </Style>
    </ControlTheme>
</ResourceDictionary>
